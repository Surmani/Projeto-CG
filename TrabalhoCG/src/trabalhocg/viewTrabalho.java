/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalhocg;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author lucas
 */
public class viewTrabalho extends javax.swing.JFrame {

    enum MouseState {
        MOUSE_NORMAL,
        MOUSE_ROTACAO,
        MOUSE_ESCALA,
        MOUSE_TRANSLACAO
    }
    
    escolhaDePoligono escolha;
    
    private MouseState mouseState = MouseState.MOUSE_NORMAL;
    
    private Optional<Poligono> desenho = Optional.empty();
    
    
    private int lastX;
    private int lastY;
    
    /**
     * Creates new form viewTrabalho
     */
    public viewTrabalho() {
        //this.getContentPane().setBackground(Color.LIGHT_GRAY);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        initComponents();
        painel.setBackground(Color.white);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escalaFrame = new javax.swing.JDialog();
        OK_Escala = new javax.swing.JButton();
        Cancel_Escala = new javax.swing.JButton();
        TextSx = new javax.swing.JFormattedTextField();
        TextSy = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        painel = new javax.swing.JPanel();
        ImageIcon imgReta = new ImageIcon(getClass().getResource("/imagens/reta.png"));
        drawLine = new javax.swing.JButton("",imgReta);
        ImageIcon imgRetangulo = new ImageIcon(getClass().getResource("/imagens/retangulo.png"));
        drawRect = new javax.swing.JButton("",imgRetangulo);
        ImageIcon imgLimpar = new ImageIcon(getClass().getResource("/imagens/limpar.png"));
        limpar = new javax.swing.JButton("",imgLimpar);
        ImageIcon imgTriangulo = new ImageIcon(getClass().getResource("/imagens/triangulo.png"));
        drawTri = new javax.swing.JButton("",imgTriangulo);
        ImageIcon imgRotacao = new ImageIcon(getClass().getResource("/imagens/rotacao.png"));
        rotacao = new javax.swing.JButton("",imgRotacao);
        ImageIcon imgTranslacao = new ImageIcon(getClass().getResource("/imagens/translacao.png"));
        translacao = new javax.swing.JButton("",imgTranslacao);
        ImageIcon imgEscala = new ImageIcon(getClass().getResource("/imagens/escala.png"));
        escala = new javax.swing.JButton("",imgEscala);
        ImageIcon imgZoomExtend = new ImageIcon(getClass().getResource("/imagens/zoomextend.png"));
        zoomExtend = new javax.swing.JButton("",imgZoomExtend);

        escalaFrame.setName("escala dialog"); // NOI18N

        OK_Escala.setText("OK");
        OK_Escala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK_EscalaActionPerformed(evt);
            }
        });

        Cancel_Escala.setText("Cancelar");
        Cancel_Escala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_EscalaActionPerformed(evt);
            }
        });

        TextSx.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.###"))));

        TextSy.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.###"))));

        jLabel1.setText("Escala X:");

        jLabel2.setText("Escala Y:");

        javax.swing.GroupLayout escalaFrameLayout = new javax.swing.GroupLayout(escalaFrame.getContentPane());
        escalaFrame.getContentPane().setLayout(escalaFrameLayout);
        escalaFrameLayout.setHorizontalGroup(
            escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escalaFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(escalaFrameLayout.createSequentialGroup()
                        .addGroup(escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(OK_Escala, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextSx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cancel_Escala, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(escalaFrameLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextSy, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        escalaFrameLayout.setVerticalGroup(
            escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(escalaFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextSx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextSy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(escalaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OK_Escala)
                    .addComponent(Cancel_Escala))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        painel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                painelMouseDragged(evt);
            }
        });
        painel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                painelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                painelMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 532, Short.MAX_VALUE)
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        drawLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawLineActionPerformed(evt);
            }
        });

        drawRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawRectActionPerformed(evt);
            }
        });

        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        drawTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawTriActionPerformed(evt);
            }
        });

       rotacao.setBackground(new java.awt.Color(94, 170, 168));
        rotacao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(18, 62, 201), 4, true));
        rotacao.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotacaoActionPerformed(evt);
            }
        });
        
        translacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                translacaoActionPerformed(evt);
            }
        });

        escala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escalaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(drawRect, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drawTri, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drawLine, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rotacao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(escala, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(translacao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(zoomExtend, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(escala, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rotacao, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(translacao, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(zoomExtend, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(drawLine, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(drawRect, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(drawTri, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void desenhar()
    {
        if(!desenho.isPresent()) return;
        Poligono des = desenho.get();
        
        Graphics g1 = painel.getGraphics();
        g1.setColor(Color.white);
        g1.fillRect(0,0, painel.getWidth(), painel.getHeight());
        
        g1.setColor(Color.black);
        
        
        double[][] coords = des.transJanelaViewport(painel.getHeight()-1);

        int[] xs;
        xs = new int[coords[0].length];
        int[] ys;
        ys = new int[coords[0].length];
        for(int i = 0; i < coords[0].length; i++) {
            xs[i] = (int) Math.round(coords[0][i]);
            ys[i] = (int) Math.round(coords[1][i]);
        }
        
        g1.drawPolygon(xs, ys, coords[0].length);
        
    }
    
    private void drawRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawRectActionPerformed
        //escolha = new escolhaDePoligono(4,painel);
        //escolha.setVisible(true);
        
        desenho = Optional.of(
            new Poligono(
                    new Ponto2D[] {
                        new Ponto2D(0,0),
                        new Ponto2D(0, 200),
                        new Ponto2D(200,0)
                    }
            )
        );
        
        desenhar();
        
    }//GEN-LAST:event_drawRectActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        painel.repaint();
        painel.setBackground(Color.white);
        desenho = Optional.empty();
    }//GEN-LAST:event_limparActionPerformed

    private void drawTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawTriActionPerformed
        escolha = new escolhaDePoligono(3,painel);
        escolha.setVisible(true);
    }//GEN-LAST:event_drawTriActionPerformed

    private void painelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_painelMouseClicked

    private void drawLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawLineActionPerformed
        escolha = new escolhaDePoligono(2,painel);
        escolha.setVisible(true);
    }//GEN-LAST:event_drawLineActionPerformed

    private void painelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMousePressed
        lastX = evt.getX();
        lastY = evt.getY();
    }//GEN-LAST:event_painelMousePressed

    private void painelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseReleased
        
    }//GEN-LAST:event_painelMouseReleased

    private void translacaoActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if(mouseState != MouseState.MOUSE_TRANSLACAO) {
            mouseState = MouseState.MOUSE_TRANSLACAO;
            this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        } else{
            mouseState = MouseState.MOUSE_NORMAL;
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }                                          
    
    private void painelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseDragged
        if(!desenho.isPresent()) return;
        Poligono des = desenho.get();
        
        int deltaX = (evt.getX() - lastX);
        int deltaY = (evt.getY() - lastY);
        lastX = evt.getX();
        lastY = evt.getY();
        
        switch(mouseState) {
            case MOUSE_TRANSLACAO:
                if(deltaX != 0 || deltaY != 0) {
                    des.translate(deltaX, -deltaY);
                    desenhar();
                }
                
                break;
            case MOUSE_NORMAL:
            default:
                break;
        }
    }//GEN-LAST:event_painelMouseDragged

    private void escalaActionPerformed(java.awt.event.ActionEvent evt) {                                       
        escalaFrame.setVisible(true);
        escalaFrame.pack();
    }                                      

    private void Cancel_EscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_EscalaActionPerformed
        escalaFrame.dispose();
    }//GEN-LAST:event_Cancel_EscalaActionPerformed

    private void OK_EscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK_EscalaActionPerformed
        if(!desenho.isPresent()) {
            escalaFrame.dispose();
            return;
        }
        Poligono des = desenho.get();
        
        
        double Sx = 1.0;
        double Sy = 1.0;
        try{
            NumberFormat fmt = NumberFormat.getInstance();
            Number num = fmt.parse(TextSx.getText());
            Sx = num.doubleValue();
        } catch(NumberFormatException e) {
        } catch (ParseException ex) {
            Logger.getLogger(viewTrabalho.class.getName()).log(Level.SEVERE, null, ex);
        }
        try{
            NumberFormat fmt = NumberFormat.getInstance();
            Number num = fmt.parse(TextSy.getText());
            Sy = num.doubleValue();
        } catch(NumberFormatException e) {
        } catch (ParseException ex) {
            Logger.getLogger(viewTrabalho.class.getName()).log(Level.SEVERE, null, ex);
        }

        des.scale(new Ponto2D(0,0), Sx, Sy);
        desenhar();
        escalaFrame.dispose();
    }//GEN-LAST:event_OK_EscalaActionPerformed

    private void rotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rotacaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewTrabalho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new viewTrabalho().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel_Escala;
    private javax.swing.JButton OK_Escala;
    private javax.swing.JFormattedTextField TextSx;
    private javax.swing.JFormattedTextField TextSy;
    private javax.swing.JButton drawLine;
    private javax.swing.JButton drawRect;
    private javax.swing.JButton drawTri;
    private javax.swing.JButton escala;
    private javax.swing.JDialog escalaFrame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton limpar;
    public javax.swing.JPanel painel;
    private javax.swing.JButton rotacao;
    private javax.swing.JButton translacao;
    private javax.swing.JButton zoomExtend;
    // End of variables declaration//GEN-END:variables
}
